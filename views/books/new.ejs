<div style="max-width: 800px; margin: 0 auto;">
    <!-- Page Header -->
    <div style="text-align: center; margin-bottom: 30px;">
        <h2 style="color: #333; margin: 0 0 10px 0;">üìö Add New Book</h2>
        <p style="color: #6c757d; margin: 0;">Add a new book to your library collection</p>
    </div>

    <!-- Error Message -->
    <% if (typeof errorMessage !== 'undefined' && errorMessage) { %>
        <div style="background: #f8d7da; color: #721c24; padding: 15px; border: 1px solid #f5c6cb; border-radius: 6px; margin-bottom: 20px;">
            <strong>‚ö†Ô∏è Error:</strong> <%= errorMessage %>
        </div>
    <% } %>

    <!-- Form Container -->
    <div style="background: white; border: 1px solid #e9ecef; border-radius: 10px; padding: 30px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);">
        <form action="/books" method="POST" enctype="multipart/form-data" id="bookForm">
            <!-- Include Form Fields -->
            <%- include('_form_field') %>
            
            <!-- Form Actions -->
            <div style="display: flex; gap: 10px; justify-content: flex-end; margin-top: 25px; padding-top: 20px; border-top: 1px solid #e9ecef;">
                <a href="/books" style="padding: 12px 24px; background: #6c757d; color: white; text-decoration: none; border-radius: 6px; border: none; font-size: 14px; cursor: pointer; transition: background-color 0.3s;">
                    ‚ùå Cancel
                </a>
                <button type="submit" style="padding: 12px 24px; background: #28a745; color: white; border: none; border-radius: 6px; font-size: 14px; cursor: pointer; font-weight: bold; transition: background-color 0.3s;">
                    ‚úÖ Create Book
                </button>
            </div>
        </form>
    </div>

    <!-- Help Text -->
    <div style="text-align: center; margin-top: 20px; color: #6c757d; font-size: 14px;">
        <p>üí° <strong>Tips:</strong> Upload a cover image for better visual appeal ‚Ä¢ Make sure all required fields are filled</p>
    </div>
</div>

<script>
// Handle form submission with FilePond data
document.getElementById('bookForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    // Get FilePond file data
    const fileInput = document.querySelector('input.filepond');
    if (fileInput && fileInput.fileData) {
        // Create a new FormData object
        const formData = new FormData(this);
        
        // Remove the original file input
        formData.delete('cover');
        
        // Add the FilePond file
        const file = fileInput.fileData.getFile();
        formData.append('cover', file);
        
        // Submit the form with the file
        fetch('/books', {
            method: 'POST',
            body: formData
        })
        .then(response => {
            if (response.redirected) {
                window.location.href = response.url;
            } else {
                return response.text();
            }
        })
        .then(html => {
            if (html) {
                document.body.innerHTML = html;
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error creating book. Please try again.');
        });
    } else {
        // No file selected, submit normally
        this.submit();
    }
});
</script>